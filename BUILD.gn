import("//build/ohos.gni")

config("nlohmann_json_config") {
  include_dirs = [
    "include",
    "include/nlohmann",
    "include/nlohmann/detail",
    "include/nlohmann/detail/conversions",
    "include/nlohmann/detail/input",
    "include/nlohmann/detail/iterators",
    "include/nlohmann/detail/meta",
    "include/nlohmann/detail/output",
  ]
  cflags_cc = [ "-fexceptions" ]
}

ohos_static_library("nlohmann_json_static") {
  sources = [
    "include/nlohmann/json.hpp",
    "include/nlohmann/adl_serializer.hpp",
    "include/nlohmann/byte_container_with_subtype.hpp",
    "include/nlohmann/detail/conversions/from_json.hpp",
    "include/nlohmann/detail/conversions/to_json.hpp",
    "include/nlohmann/detail/exceptions.hpp",
    "include/nlohmann/detail/hash.hpp",
    "include/nlohmann/detail/input/binary_reader.hpp",
    "include/nlohmann/detail/input/input_adapters.hpp",
    "include/nlohmann/detail/input/lexer.hpp",
    "include/nlohmann/detail/input/parser.hpp",
    "include/nlohmann/detail/iterators/internal_iterator.hpp",
    "include/nlohmann/detail/iterators/iter_impl.hpp",
    "include/nlohmann/detail/iterators/iteration_proxy.hpp",
    "include/nlohmann/detail/iterators/json_reverse_iterator.hpp",
    "include/nlohmann/detail/iterators/primitive_iterator.hpp",
    "include/nlohmann/detail/json_pointer.hpp",
    "include/nlohmann/detail/json_ref.hpp",
    "include/nlohmann/detail/macro_scope.hpp",
    "include/nlohmann/detail/meta/cpp_future.hpp",
    "include/nlohmann/detail/meta/type_traits.hpp",
    "include/nlohmann/detail/output/binary_writer.hpp",
    "include/nlohmann/detail/output/output_adapters.hpp",
    "include/nlohmann/detail/output/serializer.hpp",
    "include/nlohmann/detail/value_t.hpp",
    "include/nlohmann/json_fwd.hpp",
    "include/nlohmann/ordered_map.hpp",
  ]
  public_configs = [ ":nlohmann_json_config" ]
}

config("nlohmann_json_single_config") {
  include_dirs = [
    "single_include",
    "single_include/nlohmann",
  ]
  cflags_cc = [ "-fexceptions" ]
}

ohos_static_library("nlohmann_json_single_static") {
  sources = [
    "single_include/nlohmann/json.hpp",
  ]
  public_configs = [ ":nlohmann_json_single_config" ]
}

